name: Windows.Detection.ProcessMemory.BazarBackdoor
description: |
  This artifact scans processes for a BazarBackdoor yara signature and enables 
  fast upload of processes with hits for analysis
  
  BazarBackdoor is a malicious initial accesss broker malware believed to have been
  created by the same group that operates the Trickbot malware infrastructure. BazarBackdoor
  gets its name from specific C2 communications it employs using .bazar TLD operating on EmerDNS. 

author: "Brian Laskowski - @laskow26"

reference:
  - https://malpedia.caad.fkie.fraunhofer.de/details/win.bazarbackdoor

parameters:
  - name: ProcessRegex
    default: .
  - name: PidRegex
    default: .
  - name: UploadHits
    type: bool
  - name: YaraRule
    default: |
        rule win_bazarbackdoor_auto {
        
            meta:
                author = "Felix Bilstein - yara-signator at cocacoding dot com"
                date = "2020-12-22"
                version = "1"
                description = "autogenerated rule brought to you by yara-signator"
                tool = "yara-signator v0.6.0"
                signator_config = "callsandjumps;datarefs;binvalue"
                malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bazarbackdoor"
                malpedia_rule_date = "20201222"
                malpedia_hash = "30354d830a29f0fbd3714d93d94dea941d77a130"
                malpedia_version = "20201023"
                malpedia_license = "CC BY-SA 4.0"
                malpedia_sharing = "TLP:WHITE"
        
        
            strings:
       	        $sequence_0 = { 41b80f100000 488bce 4889442420 ff15???????? 85c0 }
                $sequence_1 = { ff15???????? 85c0 780a 4898 }
                $sequence_2 = { 488bcf ffd0 8bc3 e9???????? 488b4c2458 488d55e0 ff15???????? }
                $sequence_3 = { 488905???????? 4885c0 750a b82c000000 }
                $sequence_4 = { 4885c0 750a b829000000 e9???????? }
                $sequence_5 = { 4c8d9c24b0050000 498b5b30 498b7338 498b7b48 }
                $sequence_6 = { 4156 4883ec20 498bf0 488bea 4c8bf1 33db 4c8bc6 }
                $sequence_7 = { 8905???????? 83f8ff 7504 32c0 eb2d }
                $sequence_8 = { 0fb70f ff15???????? 0fb74f02 0fb7d8 }
                $sequence_9 = { 0fb74f02 0fb7d8 ff15???????? 0fb74f08 }
                $sequence_10 = { 7507 33c0 e9???????? b8ff000000 }
                $sequence_11 = { c3 0fb74c0818 b80b010000 663bc8 }
                $sequence_12 = { 3bc1 0f4fc1 99 2bc2 }
                $sequence_13 = { b9bb010000 663bc1 7404 a801 }
                $sequence_14 = { 7526 ff15???????? 3d33270000 7519 8b0f }
                $sequence_15 = { ff15???????? 6683f808 7404 33c0 }
                $sequence_16 = { 3d12030900 7407 33c0 e9???????? }
                $sequence_17 = { 0f4cc1 b9100e0000 3bc1 0f4fc1 }
                $sequence_18 = { 8a03 3c20 7709 84c0 }
                $sequence_19 = { b81aff0000 663bd8 0f82fcfeffff 83c8ff }
                $sequence_20 = { 8d480a 663bd9 0f822cffffff 8d4176 663bd8 727c 8d480a }
                $sequence_21 = { 663bd9 0f8387010000 663bda 0f8294010000 b96a060000 663bd9 }
                $sequence_22 = { 0f8586000000 8bc2 0fb6c9 83e13f }
                $sequence_23 = { 8d820028ffff 3dff070000 763e 81fa00001100 }
                $sequence_24 = { 56 57 8bf2 8bf9 33d2 6a07 68eeeac01f }
                $sequence_25 = { 688f000000 6858bc81da 42 e8???????? 59 59 }
                $sequence_26 = { 8a01 56 8bf1 eb07 }
                $sequence_27 = { 02d0 3016 40 83f813 72f1 }
                $sequence_28 = { 33f6 8b54240c 85d2 7505 5f }
                $sequence_29 = { 0fb745e8 50 68???????? e8???????? }
                $sequence_30 = { c3 85d2 741b 56 8b742408 }
                $sequence_31 = { 83f813 72f6 8bc1 c3 }
                $sequence_32 = { 0fb7f0 0fb74702 50 ffd3 0fb7d8 0fb74708 }
                $sequence_33 = { 8d91ff3fffff b101 03d0 eb08 }
                $sequence_34 = { 85d2 740d 33d2 83f902 0f95c2 83c224 }
                $sequence_35 = { 8d7001 56 6a08 ff15???????? }
                $sequence_36 = { 8bc2 c1f808 0fb6c0 50 0fb6c2 50 68???????? }
                $sequence_37 = { 68???????? e8???????? 83c410 b800308804 6a00 50 }
                $sequence_38 = { 8bf8 8bd6 be???????? 83ef04 }
                $sequence_39 = { 8bf0 8d7e02 57 6a08 ff15???????? }
                $sequence_40 = { 4183f809 0f9fc3 4183f80a 0f9cc1 30d1 }
                $sequence_41 = { 38d0 488b7da8 752a c60700 c7470465f90c0d c7470857f9250d }
                $sequence_42 = { 30c8 08d0 3c01 7508 8a4c2420 84c0 7506 }
                $sequence_43 = { 4d8d0411 450fb7541118 31c0 4181fa0b020000 741f }
                $sequence_44 = { e8???????? 488b5c2440 488b0b 488b542460 }
                $sequence_45 = { 83f90a 0f9cc3 83f909 0f9fc1 38d3 0f8579020000 }
                $sequence_46 = { 4989f0 41b904010000 ffd0 e9???????? 31c9 ba01000000 }
                $sequence_47 = { 8d78ff 0faff8 83e701 85ff }
                $sequence_48 = { 8b442420 448bc0 488b542440 488b4c2428 e8???????? }
                $sequence_49 = { 89442458 e9???????? 4c8d442448 488b942488000000 488b8c2480000000 e8???????? 85c0 }
                $sequence_50 = { 488b542468 488b442438 488b4830 ff15???????? }
                $sequence_51 = { 4883ec48 488b442458 488b4008 4889442430 488b442458 488b00 }
                $sequence_52 = { 85c0 7410 488b442428 488b00 8b4020 890424 eb1f }
                $sequence_53 = { 488bc1 483b442438 7669 488b442428 }
                $sequence_54 = { 488b442470 488b00 0fb74006 39442420 0f8d63010000 }
                $sequence_55 = { 483908 7556 488b442460 83781800 752d 488b442458 488b00 }
        
            condition:
                7 of them and filesize < 507904
        }

sources:
  - precondition:
      SELECT OS From info() where OS = 'windows'

    query: |
      -- find velociraptor process
      LET me = SELECT Pid FROM pslist(pid=getpid())
      
      -- find all processes and add filters
      LET processes = SELECT Name as ProcessName, CommandLine, Pid
        FROM pslist()
        WHERE 
            Name =~ ProcessRegex
            AND format(format="%d", args=Pid) =~ PidRegex
            AND NOT Pid in me.Pid

      -- scan processes in scope with our rule
      LET hits = SELECT * FROM foreach(
        row=processes,
        query={
            SELECT 
                ProcessName,
                CommandLine,
                Pid,
                Strings.Offset as Offsets,
                Namespace,
                Rule,
                Meta,
                Strings.Name as IOCname,
                Strings.Data as IOCdata
             FROM proc_yara(rules=YaraRule, pid=Pid) 
             LIMIT 1
          })
      
      -- upload hits using proc_dump plugin
      LET upload_hits = SELECT * FROM foreach(
        row=hits,
        query={
            SELECT 
                ProcessName,
                CommandLine,
                Pid,
                Offsets,
                Namespace,
                Rule,
                Meta,
                IOCname,
                IOCdata,
                upload(file=FullPath,name=format(format='%v-%v.dmp',
                    args= [ split(string=ProcessName,sep='\\.')[0], Pid ]
                        )) as ProcessDump
            FROM proc_dump(pid=Pid)
          })
      
      -- output rows
      SELECT * FROM if(condition= UploadHits,
            then= upload_hits,
            else= hits)
