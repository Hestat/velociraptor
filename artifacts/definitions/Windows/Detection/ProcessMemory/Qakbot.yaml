name: Windows.Detection.ProcessMemory.Qakbot
description: |
  This artifact scans processes for a Qakbot yara signature and enables 
  fast upload of processes with hits for analysis
  
  Originally a banking trojan today Qakbot operates as an intial access
  broker facilitating other actors by stealing credentials, emails and 
  deploying ransomware.

author: "Brian Laskowski - @laskow26"

reference:
  - https://malpedia.caad.fkie.fraunhofer.de/details/win.qakbot

parameters:
  - name: ProcessRegex
    default: .
  - name: PidRegex
    default: .
  - name: UploadHits
    type: bool
  - name: YaraRule
    default: |
        rule win_qakbot_auto {
            meta:
                author = "Felix Bilstein - yara-signator at cocacoding dot com"
                date = "2020-12-22"
                version = "1"
                description = "autogenerated rule brought to you by yara-signator"
                tool = "yara-signator v0.6.0"
                signator_config = "callsandjumps;datarefs;binvalue"
                malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.qakbot"
                malpedia_rule_date = "20201222"
                malpedia_hash = "30354d830a29f0fbd3714d93d94dea941d77a130"
                malpedia_version = "20201023"
                malpedia_license = "CC BY-SA 4.0"
                malpedia_sharing = "TLP:WHITE"
        
        
            strings:
                $sequence_0 = { 57 ff15???????? 33c0 85f6 0f94c0 }
                $sequence_1 = { 50 ff5508 8bf0 59 }
                $sequence_2 = { 8b4df8 8908 ff75fc ff15???????? }
                $sequence_3 = { c1e80b 33d0 8bc2 25ad583aff c1e007 33d0 }
                $sequence_4 = { 8b1481 40 8981c0090000 8bc2 c1e80b 33d0 8bc2 }
                $sequence_5 = { c3 33c9 3d80000000 0f94c1 }
                $sequence_6 = { 57 6a00 6a02 ff15???????? 8bf8 83c8ff }
                $sequence_7 = { 750c 57 ff15???????? 6afe 58 }
                $sequence_8 = { 8d45f8 56 50 e8???????? 8d45f4 }
                $sequence_9 = { 7507 c74508???????? e8???????? 85c0 7d08 }
                $sequence_10 = { 50 e8???????? 8b06 47 59 }
                $sequence_11 = { 740d 8d45fc 6a00 50 e8???????? 59 }
                $sequence_12 = { 33c0 7402 ebfa e8???????? }
                $sequence_13 = { ebfa 83c8ff eb02 33c0 }
                $sequence_14 = { 85c0 750d 33d2 7402 }
                $sequence_15 = { 6a00 ff15???????? a3???????? 833d????????00 750b 33c0 7402 }
                $sequence_16 = { ff750c 8d85d8feffff 50 ff5508 }
                $sequence_17 = { 7404 33c0 eb27 6a00 6a00 }
                $sequence_18 = { ebfa eb06 33c0 7402 }
                $sequence_19 = { 7412 8d85d8feffff 50 57 ff15???????? 85c0 75d9 }
                $sequence_20 = { 83c40c 33c0 5b 5f 5e c9 c3 }
                $sequence_21 = { 7402 ebfa 83c8ff e9???????? }
                $sequence_22 = { 8b84248c000000 8b4050 89442470 8b84248c000000 8b4034 8944246c 89e0 }
                $sequence_23 = { 5f 5b 5d c3 31c0 8944242c 89442428 }
                $sequence_24 = { 8b5824 89442438 8b842480000000 01f8 81c283f803c4 }
                $sequence_25 = { 81e2ffff0000 8b75ec 81c622be8b8f 01f2 8b75dc 01d6 8975d0 }
                $sequence_26 = { 8b5508 83f800 89442414 894c2410 8954240c }
                $sequence_27 = { c645ebda 662b4df2 668988f4000000 c78008010000611a0000 66c780f80000000b01 83c410 }
                $sequence_28 = { 8b4d0c 8b5508 31f6 8b5244 83fa00 8945f4 894df0 }
                $sequence_29 = { 8b4c2418 39cf 89442410 897c2408 74c8 8b442408 8b4c2438 }
        
        
            condition:
                7 of them and filesize < 958464
        }

sources:
  - precondition:
      SELECT OS From info() where OS = 'windows'

    query: |
      -- find velociraptor process
      LET me = SELECT Pid FROM pslist(pid=getpid())
      
      -- find all processes and add filters
      LET processes = SELECT Name as ProcessName, CommandLine, Pid
        FROM pslist()
        WHERE 
            Name =~ ProcessRegex
            AND format(format="%d", args=Pid) =~ PidRegex
            AND NOT Pid in me.Pid

      -- scan processes in scope with our rule
      LET hits = SELECT * FROM foreach(
        row=processes,
        query={
            SELECT 
                ProcessName,
                CommandLine,
                Pid,
                Strings.Offset as Offsets,
                Namespace,
                Rule,
                Meta,
                Strings.Name as IOCname,
                Strings.Data as IOCdata
             FROM proc_yara(rules=YaraRule, pid=Pid) 
             LIMIT 1
          })
      
      -- upload hits using proc_dump plugin
      LET upload_hits = SELECT * FROM foreach(
        row=hits,
        query={
            SELECT 
                ProcessName,
                CommandLine,
                Pid,
                Offsets,
                Namespace,
                Rule,
                Meta,
                IOCname,
                IOCdata,
                upload(file=FullPath,name=format(format='%v-%v.dmp',
                    args= [ split(string=ProcessName,sep='\\.')[0], Pid ]
                        )) as ProcessDump
            FROM proc_dump(pid=Pid)
          })
      
      -- output rows
      SELECT * FROM if(condition= UploadHits,
            then= upload_hits,
            else= hits)